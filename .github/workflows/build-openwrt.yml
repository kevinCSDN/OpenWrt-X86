#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build-lede-6.1

on:
  repository_dispatch:
  workflow_dispatch:
#  release:
#    types: [published]

#  push:
#    branches: 
#      - master

#  schedule:
#    - cron: 0 18 * * 1
  
  #watch:
  #  types: [started]

env:
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
#  REPO_URL: https://github.com/coolsnowwolf/lede
#  REPO_BRANCH: master
#  FEEDS_CONF: feeds.conf.default
#  CONFIG_FILE: x86_64.config
#  DIY_P1_SH: diy-part1-lede.sh
#  DIY_P2_SH: diy-p2-lede.sh

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
    - name: Check Server Performance
      run: |
        echo "Ë≠¶Âëä‚ö†"
        echo "ÂàÜÈÖçÁöÑÊúçÂä°Âô®ÊÄßËÉΩÊúâÈôêÔºåËã•ÈÄâÊã©ÁöÑÊèí‰ª∂ËøáÂ§öÔºåÂä°ÂøÖÊ≥®ÊÑèCPUÊÄßËÉΩÔºÅ"
        echo -e "Â∑≤Áü•CPUÂûãÂè∑ÔºàÈôçÂ∫èÔºâÔºö8370CÔºå8272CLÔºå8171MÔºåE5-2673 \n"
        echo "--------------------------CPU‰ø°ÊÅØ--------------------------"
        echo "CPUÁâ©ÁêÜÊï∞ÈáèÔºö$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPUÊ†∏ÂøÉ‰ø°ÊÅØÔºö$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------ÂÜÖÂ≠ò‰ø°ÊÅØ--------------------------"
        echo "Â∑≤ÂÆâË£ÖÂÜÖÂ≠òËØ¶ÁªÜ‰ø°ÊÅØÔºö"
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------Á°¨Áõò‰ø°ÊÅØ--------------------------"
        echo "Á°¨ÁõòÊï∞ÈáèÔºö$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT  
     
    - name: Space cleanup and Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: Checkout OpenWrt
      uses: actions/checkout@main
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
        echo "src-git small https://github.com/kenzok8/small" >> ./feeds.conf.default
        echo "src-git diypkg https://github.com/14link/diy-package" >> ./feeds.conf.default
        git clone https://github.com/sirpdboy/autosamba package/autosamba
        git clone https://github.com/sirpdboy/luci-app-netdata package/luci-app-netdata
        git clone -b 18.06 https://github.com/kiddin9/luci-theme-edge.git package/luci-theme-edge

    #    sed -i '$a src-git diypkg https://github.com/14link/diy-package' feeds.conf.default
       
    #    echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> ./feeds.conf.default
    #    echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default
    #    echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        
    - name: Update & Install feeds & del double feeds #Ë∞ÉÊï¥&&ÂéªÈáç,Âà†Èô§‰∏ç‰ΩøÁî®ÁöÑÊ∫êÊñá‰ª∂
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        rm -rf ./package/lean/autosamba
        rm -rf ./package/feeds/applications/luci-app-netdata
        
    #Ë∞ÉÊï¥&&ÂéªÈáç,Âà†Èô§‰∏ç‰ΩøÁî®ÁöÑÊ∫êÊñá‰ª∂
    #- name: Import external feeds 
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/sirpdboy/luci-app-netdata ./package/luci-app-netdata
     
    #- name: Import external feeds - passwall
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    #- name: Import external feeds - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/kiddin9/luci-theme-edge package/luci-theme-edge
    #    git clone https://github.com/esirplayground/luci-app-poweroff package/luci-app-poweroff
    #    git clone https://github.com/sirpdboy/luci-app-autotimeset package/luci-app-autotimeset
    
    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
    #    echo -e "$(nproc) thread build."
    #    make -j$(nproc) || make -j1 || make -j1 V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
      
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
 
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages && mkdir packages
        find -name "*esxi-flat.vmdk*" | xargs -i mv -f {} packages
        find -name "*kernel.bin*" | xargs -i mv -f {} packages
        find -name "*rootfs*" | xargs -i mv -f {} packages
        find -name "*.manifest*" | xargs -i mv -f {} packages
        find -name "*vmlinuz*" | xargs -i mv -f {} packages
        find -name "*esxi.vmdk*" | xargs -i mv -f {} packages      
        find -name "*sha256sums*" | xargs -i rm -rf {}
        find -name "*version.buildinfo*" | xargs -i rm -rf {}
        find -name "*feeds.buildinfo*" | xargs -i rm -rf {}
        find -name "*profiles.json*" | xargs -i rm -rf {}
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
#        find -name "*profiles.json*" | xargs -i rm -rf {}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
 
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
       
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        name: ${{ env.FILE_TIME }} „Äå openwrt-lede-6.1-X86-64 „Äç     
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.REPO_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 45
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 9
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
